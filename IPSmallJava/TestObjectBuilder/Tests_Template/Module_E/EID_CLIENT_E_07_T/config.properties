ecard.testcase.description=This test case checks the behavior of the eID-Client in case the eID-Server offers only SSL/TLS versions during the TLS-2 handshake that are not conforming to [TR-03124-1].\nUse the GlobalTester test case TS_eID_1.2.1.xml.
testcase.profiles=CRYPTO

# both, eService and EID server use following certs:
eservice.certificate=CERT_TLS_ESERVICE_3_A.der
eservice.privatekey=CERT_TLS_ESERVICE_3_A_KEY.der

eidservice.certificate=CERT_TLS_EIDSERVER_3_A.der
eidservice.privatekey=CERT_TLS_EIDSERVER_3_A_KEY.der

# Set the SSL/TLS version here
eidservice.tls.version=sslv3
#eidservice.tls.version=tls10
#eidservice.tls.version=tls11
#eidservice.tls.version=tls12

# Check if the eID-Client requests the TC Token via the provided URL and respond to the eID-Client with a valid TC Token.
expect.finalDefaultFlowStep=TC_TOKEN

# The connection establishment is aborted by the eID-Client.
# The eID-Client directs the browser to the "RefreshAddress".
expect.additionalStep.0=REFRESH_ADDRESS

# The direction includes an additional URL-Parameter "ResultMajor=error&ResultMinor=res_min", where res_min is "trustedChannelEstablishmentFailed" or "clientError".
expect.additionalStep.1=REDIRECT_BROWSER
expect.additionalStep.urlPath.1={eservice.refresh.urlpath}
expect.additionalStep.urlParams.1=ResultMajor=error&ResultMinor=trustedChannelEstablishmentFailed,ResultMajor=error&ResultMinor=clientError
expect.additionalStep.statusCodes.1=303