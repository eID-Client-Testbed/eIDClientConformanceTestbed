
# Purpose: this file 'common/config.properties' contains any default-values for test cases. They CAN be overridden by test case specific
#          properties by adding entries to '{TESTCASE-NAME}/config.properties'.

# NOTE: IF YOU CHANGE ANY VALUES within this file, YOU MUST validate functionality of other test cases, as these values are inherited by
#       any test case and changes in this file therefore might affect lots of test case.

# NOTE: folders: any path-/file-names given in this properties-file are relative to the TESTCASE(!) currently executed. That is, 
#       to reference a file within this 'common' folder, you must set a '../common/' prefix. On the other hand, this allows for 
# 		pointing to a file within the {TESTCASE}-folder (currently executed), independent of its name.

# Hint: if you want override a value which was defined as default value in common/config.properties, you can set an empty value like
# 		my.key=


# default: use browsersimulator to automate test. Set to
# ecard.testcase.type=browser
# for a particular test if to be done in browser/FF
ecard.testcase.type=browsersimulator

########## Expectations ##########################
# Expectations are defined per testcase to control 
# a testrun and its result. Overwrite these values
# in testcase-specific config.properties
##################################################
# finalDefaultFlowStep= The final step of the default test flow expected to be executed. If testcase does not reach this
# step or processes beyond this step before reaching finalResultStep, it is set to failed. 
# Takes any enum-value from ITestProtocolCallback.TestStep (case-insensitive).
# Default value: success testcases are expected to redirect browser to refreshUrl 
expect.finalDefaultFlowStep=redirect_browser
# The final step expected to be executed. This MAY be different from finalDefaultFlowStep for error-useCases, e.g.
# finalDefaultFlowStep=TC_TOKEN and finalResultStep=REDIRECT_BROWSER with finalResultUrl={eservice.communicationerror.urlpath}
# Can also be the same as expect.finalDefaultFlowStep, e.g. both 'redirect_browser' for default success flow.
expect.finalResultStep=redirect_browser
# url to be redirected (if redirect applies for current testcase result)
expect.finalResultUrl={eservice.refresh.urlpath}
# params for expect.finalResultUrl. This is essential to distinct 'refresh (success) vs refresh?majorError=...'
expect.finalResultUrlParams=

########## EO Expectations #######################


eidservice.port=8443
#ausweisapp-idp-test.secunet.de 192.168.249.1
eidservice.hostname=ausweisapp-idp-test.secunet.de
#127.0.0.1 
eidservice.certificate=ServerCertificate.der
eidservice.privatekey=PrivateKey.der
eidservice.usepsk=true
eidservice.accept.non.conform.http11.messages=true

eidservice.cv.cvca=CVCertificate.cvcert
eidservice.cv.dvca=DVCertificate.cvcert
eidservice.cv.terminal=TerminalCertificate.cvcert
eidservice.cv.terminal.key=TerminalCertificateKey.pkcs8
eidservice.cv.terminal.sector=TerminalCertificateSectorKey.bin
eidservice.cert.description=TerminalCertificateDesc.bin
eidservice.chat.req=ChatRequired.bin
eidservice.chat.opt=ChatOptional.bin
eidservice.aux.data=AuxData.bin
# SSL/TLS version. Supported versions are sslv3, tls10, tls11 and tls12.
eidservice.tls.version=tls10
# Comma-separated list of cipher suites (for allowed ones see BSI (TR-03116-4))
eidservice.tls.ciphersuites=TLS_RSA_PSK_WITH_AES_256_CBC_SHA

eservice.port=443
#ausweisapp-idp-test.secunet.de
eservice.hostname=ausweisapp-idp-test.secunet.de
eservice.certificate=ServerCertificate.der
eservice.privatekey=PrivateKey.der
# eservice.index.urlpath also always allows for passing nothing, i.e. "/" path
eservice.index.urlpath=index
eservice.index.template=eservice_index.html
eservice.refresh.urlpath=refresh
eservice.refresh.template=eservice_refresh.html
eservice.communicationerror.urlpath=communicationerror
eservice.communicationerror.template=eservice_communication_error.html
eservice.tctoken.urlpath=tctoken
eservice.tctoken.template=TCToken.xml
# SSL/TLS version. Supported versions are sslv3, tls10, tls11 and tls12.
eservice.tls.version=tls10
# Comma-separated list of cipher suites (for allowed ones see BSI (TR-03116-4))
eservice.tls.ciphersuites=TLS_RSA_PSK_WITH_AES_256_CBC_SHA




####### COMM ERROR ADDRESS SERVER #########################
# CommunicationErrorAddress was handled by eService only before. This is a separate server for HTTP instead of HTTPS use-cases.
# HTTPS might be added later.
# Values empty by default. Server is not started if "commerroraddressserver.hostname" is not set.
commerroraddressserver.port=
commerroraddressserver.hostname=
commerroraddressserver.communicationerror.urlpath=
commerroraddressserver.communicationerror.template=
# https not enabled for now (=> params unused):
commerroraddressserver.certificate=
commerroraddressserver.privatekey=
commerroraddressserver.index.template=
commerroraddressserver.tls.version=
commerroraddressserver.tls.ciphersuites=


redirector.tctoken.hostname.0=ausweisapp-redirect0-tctoken.de
redirector.tctoken.hostname.1=ausweisapp-redirect1-tctoken.de
redirector.tctoken.hostname.2=ausweisapp-redirect2-tctoken.de
redirector.refresh.hostname.0=ausweisapp-redirect0-refresh.de
redirector.tctoken.port.0=3000
redirector.tctoken.port.1=3001
redirector.tctoken.port.2=3002
redirector.refresh.port.0=4000
redirector.tctoken.urlpath.0=redirect_refresh
redirector.tctoken.urlpath.1=redirect_refresh
redirector.tctoken.urlpath.2=redirect_refresh
redirector.refresh.urlpath.0=redirect_refresh
redirector.tctoken.certificate.0=ServerCertificate.der
redirector.tctoken.certificate.1=ServerCertificate.der
redirector.tctoken.certificate.2=ServerCertificate.der
redirector.refresh.certificate.0=ServerCertificate.der
redirector.tctoken.privatekey.0=PrivateKey.der
redirector.tctoken.privatekey.1=PrivateKey.der
redirector.tctoken.privatekey.2=PrivateKey.der
redirector.refresh.privatekey.0=PrivateKey.der
redirector.tctoken.status.0=302
redirector.tctoken.status.1=303
redirector.tctoken.status.2=307
redirector.refresh.status.0=307
#redirector.tctoken.0={redirector.tctoken.hostname.0}:{redirector.tctoken.port.0}/{redirector.tctoken.urlpath.0},{redirector.tctoken.hostname.1}:{redirector.tctoken.port.1}/{redirector.tctoken.urlpath.1},{redirector.tctoken.certificate.0},{redirector.tctoken.privatekey.0},{redirector.tctoken.status.0}
#redirector.tctoken.1={redirector.tctoken.hostname.1}:{redirector.tctoken.port.1}/{redirector.tctoken.urlpath.1},{eservice.hostname}:{eservice.port}/{eservice.tctoken.urlpath},{redirector.tctoken.certificate.1},{redirector.tctoken.privatekey.1},{redirector.tctoken.status.1}
#redirector.refresh.0={redirector.refresh.hostname.0}:{redirector.refresh.port.0}/{redirector.refresh.urlpath.0},{eservice.hostname}:{eservice.port}/{eservice.refresh.urlpath},{redirector.refresh.certificate.0},{redirector.refresh.privatekey.0},{redirector.refresh.status.0}

ecard.InitializeFramework=Step_InitializeFramework.xml
ecard.DIDAuthenticate1=Step_EAC1.xml
ecard.DIDAuthenticate2=Step_EAC2.xml
ecard.DIDAuthenticate3=Step_EAC3.xml
ecard.Transmit=Step_Transmit.xml
ecard.StartPaosResponse=Step_StartPaosResponse.xml


# put an IP-entry for 'ausweisapp-browsersimulator.secunet.de' in your hosts file 
# (VmWare Host), pointing to the guest IP (e.g. .128, i.e. not the gateway). Start
# browsersimulator on guest with same IP as argument
browsersimulator.rmi.host=ausweisapp-browsersimulator.secunet.de
browsersimulator.rmi.port=1099

####### TESTCASE OPERATION PROPERTIES ############
testcase.profiles=CRYPTO,EAC,OA,PAOS,UI_OFFLINE,UI_ONLINE,PREVERIFICATION,NO_PREVERIFICATION,STRICT_TRANSMIT

## Evaluation Property Filenames   
eval.startpaos=eval_startpaos.properties
eval.initFramework=eval_initFwk.properties
eval.auth1=eval_auth1.properties
eval.auth2=eval_auth2.properties
eval.auth3=eval_auth3.properties
eval.transmit=eval_transmit.properties

####### LOGGING ##################################
Log.Flag.Append=true
Log.Flag.FormatTime=true
Log.Flag.FormatDebug=true
Log.Flag.Console=true
Log.GeneralLevel=0
Log.DebugLevel=500
Log.TestLevel=800
