<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="../../schema/TestCase.xsl"?>
<TestCase id="EID_CLIENT_B_08" xmlns="http://bsi.bund.de/TR03124" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://bsi.bund.de/TR03124 ../../schema/TR03124_Part_2.xsd">
	<Title>Test case EID_CLIENT_B_08</Title>
	<Version>1.2</Version>
	<Purpose>This test case checks the behavior of a not pre-verifying eID-Client in case the CV certificates transmitted to the eID-Card cannot be validated.</Purpose>
	<Profile>EAC</Profile>
	<Profile>PAOS</Profile>
	<Profile>NO_PREVERIFICATION</Profile>
	<Reference>TR-03112-6, Section 3.2.5 "Transmit"</Reference>
	<Reference>TR-03112-7, Section 2.6 "StartPAOS"</Reference>
	<Reference>TR-03112-7, Section 3.6 "Extended Access Control"</Reference>
	<Reference>TR-03124-1, Section 2.5.3 "Online-Authentication"</Reference>
	<Precondition>A single card reader is connected to the eID-Client system.</Precondition>
	<Precondition>A single active eID-Card is connected to the card reader.</Precondition>
	<Precondition>The eID-Card has the following trust point(s): [CERT_CV_CVCA_2_A] from [CERT_SET_2].</Precondition>
	<Precondition>The eID-Client has been activated and the communication channels TLS-1, TLS-1-2 and TLS-2 have been established.</Precondition>
	<Precondition>The eService uses the TLS server certificate [CERT_TLS_ESERVICE_1] from [CERT_SET_1].</Precondition>
	<Precondition>The eID-Server uses the TLS server certificate [CERT_TLS_EIDSERVER_1] from [CERT_SET_1].</Precondition>
	<Precondition>The eService has sent a default TC Token to the eID-Client.</Precondition>
	<Precondition>The eID-Client and the eID-Server have established PAOS communication.</Precondition>
	<TestStep>
		<Command>
			<Text>The eID-Server invokes "DIDAuthenticate_EAC1InputType".</Text>
		</Command>
		<Description>The message "DIDAuthenticate_EAC1InputType" contains the parameters "Certificate" and "CertificateDescription".</Description>
		<Description>The certificate chain from [CERT_SET_2] is sent in given order: [CERT_CV_TERM_2_A], [CERT_CV_DV_2_A].</Description>
		<Description>The certificate description corresponds to [CERT_CV_TERM_2_A].</Description>
		<ExpectedResult>
			<Text>The eID-Client displays EAC data received from the eID-Server before the user enters his PIN.</Text>
		</ExpectedResult>
		<ExpectedResult>
			<Text>The eID-Client requests the PIN.</Text>
		</ExpectedResult>
	</TestStep>
	<TestStep>
		<Command>
			<Text>Do not change CertificateHolderAuthorizationTemplate and enter the correct PIN of the eID-Card.</Text>
		</Command>
		<ExpectedResult>
			<Text>The eID-Client responds with the message "DIDAuthenticateResponse_EAC1OutputType".</Text>
		</ExpectedResult>
		<ExpectedResult>
			<Text>The message contains at least the following elements: "Result", "CertificationAuthorityReference", "EFCardAccess", "IDPICC" and "Challenge".</Text>
		</ExpectedResult>
		<ExpectedResult>
			<Text>The element "Result" contains exactly one element "ResultMajor" which equals /resultmajor#ok.</Text>
		</ExpectedResult>
		<ExpectedResult>
			<Text>The element "CertificationAuthorityReference" contains up to two references to the certification authority, which are provided by the chip.</Text>
		</ExpectedResult>
		<ExpectedResult>
			<Text>If two Certification Authority references are returned, the first reference is the more current of the two.</Text>
		</ExpectedResult>
		<ExpectedResult>
			<Text>The element "EFCardAccess" matches the card file EF.CardAccess.</Text>
		</ExpectedResult>
	</TestStep>
	<TestStep>
		<Command>
			<Text>The eID-Server generates a fresh key pair for Chip Authentication using valid domain parameters, creates a valid signature of the received challenge using [CERT_CV_TERM_2_A] and invokes "DIDAuthenticate_EAC2InputType".</Text>
		</Command>
		<Description>The message "DIDAuthenticate_EAC2InputType" contains the parameters "Certificate", "EphemeralPublicKey" and "Signature".</Description>
		<Description>The certificate chain from [CERT_SET_2] is sent in given order: [CERT_CV_DV_2_B], [CERT_CV_LINK_2_B]. The Link-Certificate, however, does not match with the "CertificationAuthorityReference" elements provided by the eID-Card.</Description>
		<Description>The element "EphemeralPublicKey" contains the generated public key for Chip Authentication.</Description>
		<Description>The element "Signature" contains the calculated signature for Terminal Authentication.</Description>
		<ExpectedResult>
			<Text>The eID-Client aborts the Online-Authentication and indicates an error.</Text>
		</ExpectedResult>
		<ExpectedResult>
			<Text>The eID-Client starts establishment of a TLS session (i. e. performs a TLS handshake without HTTP interaction) to the server of the refresh URL to retrieve the server certificate of this server. </Text>
		</ExpectedResult>
		<ExpectedResult>
			<Text>The URL used by the eID-Client matches the "RefreshAddress" element from the TC Token.</Text>
		</ExpectedResult>
	</TestStep>
	<TestStep>
		<Command>
			<Text>The eService accepts the connection TLS-1-2.</Text>
		</Command>
		<Description>The eService uses the same TLS server certificate as used for the initial TLS-1-2 connection.</Description>
		<ExpectedResult>
			<Text>The eID-Client directs the browser to the "RefreshAddress".</Text>
		</ExpectedResult>
		<ExpectedResult>
			<Text>In case of a web server based Client-Interface, the eID-Client uses "303 See Other" for the redirection.</Text>
		</ExpectedResult>
		<ExpectedResult>
			<Text>The direction includes an additional URL-Parameter "ResultMajor=error&amp;ResultMinor=res_min", where res_min is "clientError" or "trustedChannelEstablishmentFailed".</Text>
		</ExpectedResult>
	</TestStep>
</TestCase>
